sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
class(result)
return(result)
}
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
return(result)
}
sampleList()
class(result)
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
class(result)
return(result)
}
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
class(result)
return(0)
}
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
sampleList <-function(result){
result <-ats[sample(nrow(ats)), ]
return(0)
}
sampleList(result)
class(result)
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
return(0)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
return(0)
}
listWeather()
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
return(0)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
return(result)
}
listWeather()
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
class(ats)
return(0)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
return(xResult)
}
listWeather()
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall,pearson,spearman)
return(0)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "year"
yResult <-data.frame(result[,2])
names(yResult) <- "temp"
return(0)
}
listWeather()
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
return(kendall,pearson,spearman)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "year"
yResult <-data.frame(result[,2])
names(yResult) <- "temp"
return(0)
}
listWeather()
sampleList()
#replicate(10, sampleList)
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "year"
yResult <-data.frame(result[,2])
names(yResult) <- "temp"
kendall <-cor(xResult,yResult, method = "kendall")
pearson <-cor(xResult,yResult, method = "pearson")
spearman <-cor(xResult,yResult, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
return(TRUE)
}
listWeather()
sampleList()
replicate(10, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "year"
yResult <-data.frame(result[,2])
names(yResult) <- "temp"
kendall <-cor(xResult,yResult, method = "kendall")
pearson <-cor(xResult,yResult, method = "pearson")
spearman <-cor(xResult,yResult, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
return(result)
}
listWeather()
replicate(10, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "year"
yResult <-data.frame(result[,2])
names(yResult) <- "temp"
kendall <-cor(xResult,yResult, method = "kendall")
pearson <-cor(xResult,yResult, method = "pearson")
spearman <-cor(xResult,yResult, method = "spearman")
print(kendall)
print(pearson)
print(spearman)
return(result)
}
listWeather()
sampleList()
#replicate(10, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(pearson)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "year"
yResult <-data.frame(result[,2])
names(yResult) <- "temp"
pearsonList <-cor(xResult,yResult, method = "pearson")
print(pearsonList)
return(result)
}
listWeather()
sampleList()
#replicate(10000, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(pearson)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "yearList"
yResult <-data.frame(result[,2])
names(yResult) <- "templist"
pearsonList <-cor(xResult,yResult, method = "pearson")
print(pearsonList)
return(result)
}
listWeather()
sampleList()
#replicate(10000, sampleList())
replicate(10000, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(pearson)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
xResult <-data.frame(result[,1])
names(xResult) <- "yearList"
yResult <-data.frame(result[,2])
names(yResult) <- "templist"
pearsonList <-cor(xResult,yResult, method = "pearson")
print(pearsonList)
return(result)
}
listWeather()
sampleList()
#replicate(10000, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(pearson)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
data1 <- data.frame(result)
xResult <-data.frame(result[,1])
names(xResult) <- "yearList"
yResult <-data.frame(result[,2])
names(yResult) <- "templist"
pearsonList <-cor(xResult,yResult, method = "pearson")
print(pearsonList)
return(data1)
}
listWeather()
sampleList()
#replicate(10000, sampleList())
load("../data/KeyWestAnnualMeanTemperature.RData")
listWeather <-function(){
x <-data.frame(ats[,1])
names(x) <- "year"
y <-data.frame(ats[,2])
names(y) <- "temp"
kendall <-cor(x,y, method = "kendall")
pearson <-cor(x,y, method = "pearson")
spearman <-cor(x,y, method = "spearman")
print(pearson)
return(TRUE)
}
sampleList <-function(){
result <-ats[sample(nrow(ats)), ]
data1 <- data.frame(result)
xResult <-data.frame(data1[,1])
names(xResult) <- "yearList"
yResult <-data.frame(data1[,2])
names(yResult) <- "templist"
pearsonList <-cor(xResult,yResult, method = "pearson")
print(pearsonList)
return(data1)
}
listWeather()
sampleList()
#replicate(10000, sampleList())
MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = F,  stringsAsFactors = F))
View(MyData)
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = T,  sep=";", stringsAsFactors = F)
View(MyMetaData)
class(MyData)
rscript
a <- T
a
head(MyData)
MyMetaData
MyData [MyData  ==  “” ]  =  0
MyData [MyData  ==  “” ]  =  0
MyData[MyData == ""] = 0
View(MyData)
MyData <- t(MyData)
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F)
head(TempData)
View(TempData)
colnames(TempData) <- MyData[1,] # assign column names from original data
rownames(TempData) <- NULL
View(TempData)
require(reshape2)
library(repr) ; options(repr.plot.width=5, repr.plot.height= 5) # Change plot sizes (in cm) - this bit of code is only relevant if you are using a juyter notebook - ignore otherwise
library(repr) ; options(repr.plot.width=5, repr.plot.height= 5) # Change plot sizes (in cm) - this bit of code is only relevant if you are using a juyter notebook - ignore otherwise
install.packages(“reshape2”)
library(“reshape2”)
devtools::install_github("hadley/reshape")
install.packages("reshape2")
require(reshape2) # load the reshape2 package
?melt
MyWrangledData <- melt(TempData, id=c("Cultivation", "Block", "Plot", "Quadrat"), variable.name = "Species", value.name = "Count")
head(MyWrangledData); tail(MyWrangledData)
View(MyWrangledData)
getwd()
setwd("/Users/kevin/CMEECourseWork/Week3/MrRCoursework/Code")
getwd()
View(MyWrangledData)
MyWrangledData[, "Cultivation"] <- as.factor(MyWrangledData[, "Cultivation"])
MyWrangledData[, "Block"] <- as.factor(MyWrangledData[, "Block"])
MyWrangledData[, "Plot"] <- as.factor(MyWrangledData[, "Plot"])
MyWrangledData[, "Quadrat"] <- as.factor(MyWrangledData[, "Quadrat"])
MyWrangledData[, "Count"] <- as.integer(MyWrangledData[, "Count"])
str(MyWrangledData)
require(dplyr)
install.packages("dply")
install.packages("dplyr")
require(dplyr)
dplyr::tbl_df(MyWrangledData) #like head(), but nicer!
dplyr::glimpse(MyWrangledData) #like str(), but nicer!
dplyr::filter(MyWrangledData, Count > 100) #like subset(), but nicer!
dplyr::slice(MyWrangledData, 10:15)
dplyr::slice(MyWrangledData, 10:1)
dplyr::slice(MyWrangledData, 10:14)
library(dplyr)
install.packages("tidyr")
View(MyData)
require(reshape2) # load the reshape2 package
require(dplyr)
require(tidyr)
library(dplyr)
library()
MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = F,  stringsAsFactors = F))
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = T,  sep=";", stringsAsFactors = F)
MyData[MyData == ""] = 0
MyData <- t(MyData)
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F)
colnames(TempData) <- MyData[1,] # assign column names from original data
rownames(TempData) <- NULL
#MyWrangledData <- melt(TempData, id=c("Cultivation", "Block", "Plot", "Quadrat"), variable.name = "Species", value.name = "Count")
#MyWrangledData[, "Cultivation"] <- as.factor(MyWrangledData[, "Cultivation"])
#MyWrangledData[, "Block"] <- as.factor(MyWrangledData[, "Block"])
#MyWrangledData[, "Plot"] <- as.factor(MyWrangledData[, "Plot"])
#MyWrangledData[, "Quadrat"] <- as.factor(MyWrangledData[, "Quadrat"])
#MyWrangledData[, "Count"] <- as.integer(MyWrangledData[, "Count"])
#dplyr::tbl_df(MyWrangledData) #like head(), but nicer!
#dplyr::glimpse(MyWrangledData) #like str(), but nicer!
#dplyr::filter(MyWrangledData, Count > 100) #like subset(), but nicer!
#dplyr::slice(MyWrangledData, 10:15) # Look at an arbitrary set of data rows
View(MyData)
MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = F,  stringsAsFactors = F))
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = T,  sep=";", stringsAsFactors = F)
MyData[MyData == ""] = 0
MyData <- t(MyData)
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F)
colnames(TempData) <- MyData[1,] # assign column names from original data
rownames(TempData) <- NULL
View(MyData)
MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = F,  stringsAsFactors = F))
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = T,  sep=";", stringsAsFactors = F)
MyData[MyData == ""] = 0
View(MyData)
MyData
MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = F,  stringsAsFactors = F))
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = T,  sep=";", stringsAsFactors = F)
MyData[MyData == ""] = 0
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F)
View(TempData)
